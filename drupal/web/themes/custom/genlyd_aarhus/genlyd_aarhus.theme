<?php

/**
 * Implements hook_preprocess_block().
 */
function genlyd_aarhus_preprocess_block(&$variables) {
  $variables['content']['#attributes']['block'] = $variables['attributes']['id'];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function genlyd_aarhus_theme_suggestions_menu_alter(array &$suggestions, array $variables) {
  // Remove the block and replace dashes with underscores in the block ID to
  // use for the hook name.
  if (isset($variables['attributes']['block'])) {
    $hook = str_replace(['block-', '-'], [
      '',
      '_'
    ], $variables['attributes']['block']);
    $suggestions[] = $variables['theme_hook_original'] . '__' . $hook;
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function genlyd_aarhus_theme_suggestions_form_alter(&$suggestions, &$variables) {
  $hook = str_replace(['form-', '-'], [
    '',
    '_'
  ], $variables['element']['#form_id']);
  $suggestions[] = $variables['theme_hook_original'] . '__' . $hook;
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function genlyd_aarhus_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    $suggestions[] = $variables['theme_hook_original'] . '__' . $content_type;
  }
}


function genlyd_aarhus_preprocess_page(&$variables) {
  if (isset($variables['node']) && $variables['node']->getType() == 'activity') {
    $node = $variables['node'];

    // Get categories.
    $categories = [];
    foreach ($node->field_categories->referencedEntities() as $category) {
      $categories[] = $category->name->value;
    }

    $variables['activity'] = [
      'activityHero' => [
        'title' => $node->get('title')->value,
        'image' => file_create_url($node->field_image->entity->getFileUri()),
      ],
      'activityOverview' => [
        'headingWithIconDescription' => [
          'title' => \Drupal::translation()->translate('Description'),
        ],
        'headingWithIconDetails' => [
          'title' => \Drupal::translation()->translate('Details')
        ],
        'categories' => $categories,
        'info' => [
          'title' => \Drupal::translation()
            ->translate('Important information:'),
          'signup_required' => $node->field_signup_required->value ? \Drupal::translation()
            ->translate('Signup required') : NULL,
          'entry_requirements' => $node->field_entry_requirements->entity->name->value,
          'physical_requirements' => $node->field_physical_requirements->entity->name->value,
          'help_needed' => $node->field_help_needed->entity->name->value,
        ],
        'body' => check_markup($node->body->value, 'filtered_html'),
        "meta" => [
          "date" => $node->field_date->value,
          "date_label" => $node->field_date->getFieldDefinition()->getLabel(),
          "price" => isset($node->field_price->value) && $node->field_price->value > 0 ? $node->field_price->value : \Drupal::translation()
            ->translate('Free'),
          "price_label" => $node->field_price->getFieldDefinition()->getLabel(),
          "start_time" => "[TODO]",
          "start_time_label" => "Starttidspunkt [TODO]",
          "end_time" => "[TODO]",
          "end_time_label" => "Sluttidspunkt [TODO]",
          "address" => "[TODO]",
          "address_label" => "Adresse [TODO]",
          "owner" => "[TODO]",
          "owner_label" => $node->field_owner->getFieldDefinition()->getLabel(),
          "number_of_participants" => "14 deltagere",
          "number_of_participants_label" => \Drupal::translation()
            ->translate('Signed up users'),
        ]
      ],
      'activityMeta' => [

      ]
    ];
  }
}
